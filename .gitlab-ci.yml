stages:
- build
- test
- deploy
- Trigger-cross-projects


# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CONDA_PACKAGE: "fit2x"
  DEPLOY_VARIABLE: "nightly"
  MINICONDA_VERSION: "latest"

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /master/
      variables:
        DEPLOY_VARIABLE: "main"  # Override globally-defined DEPLOY_VARIABLE
    - when: always               # Run the pipeline in other cases

build:linux:
  stage: build
  tags:
    - linux
  image: continuumio/miniconda3:latest
  before_script:
    - apt update -yq && apt -yq install build-essential
  script:
    - echo "I am a build stage job."
    - source activate
    - conda install mamba boa conda-verify -c conda-forge
    - |
      conda config --add channels salilab
      conda config --add channels conda-forge
      conda config --add channels tpeulen
      conda config --add channels tpeulen/label/nightly
    - conda mambabuild conda-recipe --output-folder bld-dir
  artifacts:
    expire_in: 7 days
    paths:
      - bld-dir/

test:linux:
  variables:
    MINICONDA_OS: "Linux"
  stage: test
  tags:
    - linux
  image: continuumio/miniconda3:latest
  before_script:
    # setup conda to always accept commands
    - conda config --set always_yes yes --set changeps1 no
  script:
    - echo "I am a test stage job for linux, running on docker."
    - source activate base
    - conda install mamba conda-verify -c conda-forge
    - |
      conda config --add channels salilab
      conda config --add channels conda-forge
      conda config --add channels tpeulen
      conda config --add channels tpeulen/label/nightly
      conda config --add channels "file://`pwd`/bld-dir"
    - mamba create -n test python=3.7 ${CONDA_PACKAGE} nose scipy
    - conda activate test
    - |
      cd test
      nosetests

deploy:
  stage: deploy
  image: continuumio/miniconda3:latest
  tags:
    - linux
  dependencies:
    - test:linux
  script:
    - echo "I am a deploy stage job for linux, running on docker."
    - source activate
    - conda install anaconda-client
    - anaconda -t ${ANACONDA_API_TOKEN} upload -l ${DEPLOY_VARIABLE} -u ${CONDA_USER} --force bld-dir/linux-64/*.tar.bz2

# # Downstream projects
# chisurf:
#   stage: Trigger-cross-projects
#   trigger: tpeulen/chisurf

